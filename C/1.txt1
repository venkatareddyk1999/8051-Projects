//sum of minor diagonal elements of a matrix.
#include<stdio.h>
void main()
{
    int a[3][3],i,j,k,sum=0,m=3,n=3;
    printf("enter elements of an array:\n");
    for(i=0;i<3;i++)
    {
        for(j=0;j<3;j++)
        {
            scanf("%d",&a[i][j]);
        }
    }
    printf("entered matrix is:\n");
    for(i=0;i<3;i++)
    {
        for(j=0;j<3;j++)
        {
            printf("%d\t",a[i][j]);
        }
        printf("\n");
    }
    for(i=0;i<3;i++)
    {
        for(j=0;j<3;j++)
        {
            if(j==m-1)
            {
                sum=sum+a[i][j];
            }
        }
        m--;
        
    }
    printf("sum of diagonal elements =%d\n",sum);
}










#include<stdio.h>
void main()
{
    int a[3][3],i,j,k,num;
    printf("enter elements of an array:\n");
    for(i=0;i<3;i++)
    {
        for(j=0;j<3;j++)
        {
            scanf("%d",&a[i][j]);
        }
    }
    printf("entered matrix:\n");
    for(i=0;i<3;i++)
    {
        for(j=0;j<3;j++)
        {
            printf("%d\t",a[i][j]);
        }
        printf("\n");
    }
    for(i=0;i<3;i++)
    {
        num=a[i][i];
        a[i][i]=a[i][3-i-1];
        a[i][3-i-1]=num;
    }
    printf("answer matrix:\n");
    for(i=0;i<3;i++)
    {
        for(j=0;j<3;j++)
        {
            printf("%d\t",a[i][j]);
        }
        printf("\n");
    }
    
    
}










//Write a C program to find upper triangular matrix
#include<stdio.h>
void main()
{
    int a[3][3],i,j,k;
    printf("enter elements of an array:\n");
    for(i=0;i<3;i++)
    {
        for(j=0;j<3;j++)
        {
            scanf("%d",&a[i][j]);
        }
    }
    printf("entered matrix:\n");
    for(i=0;i<3;i++)
    {
        for(j=0;j<3;j++)
        {
            printf("%d\t",a[i][j]);
        }
        printf("\n");
    }
    printf("answer matrix:\n");
    for(i=0;i<3;i++)
    {
        for(j=0;j<=i-1;j++)
        {
            printf("^\t");
        }
        for(j=i;j<3;j++)
        {
            printf("%d\t",a[i][j]);
        }
        printf("\n");
    }
}











//Write a C program to find lower triangular matrix
#include<stdio.h>
void main()
{
    int a[3][3],i,j,k;
    printf("enter elements of an array:\n");
    for(i=0;i<3;i++)
    {
        for(j=0;j<3;j++)
        {
            scanf("%d",&a[i][j]);
        }
    }
    printf("entered matrix:\n");
    for(i=0;i<3;i++)
    {
        for(j=0;j<3;j++)
        {
            printf("%d\t",a[i][j]);
        }
        printf("\n");
    }
    printf("answer matrix:\n");
    for(i=0;i<3;i++)
    {
        
        for(j=0;j<=i;j++)
        {
            printf("%d\t",a[i][j]);
        }
        for(j=2;j>i;j--)
        {
            printf("^\t");
        }
        printf("\n");
    }
}











//sum of upper triangular matrix
#include<stdio.h>
void main()
{
    int a[3][3],i,j,k,sum=0;
    printf("enter elements of an array:\n");
    for(i=0;i<3;i++)
    {
        for(j=0;j<3;j++)
        {
            scanf("%d",&a[i][j]);
        }
    }
    printf("entered matrix:\n");
    for(i=0;i<3;i++)
    {
        for(j=0;j<3;j++)
        {
            printf("%d\t",a[i][j]);
        }
        printf("\n");
    }
    printf("answer matrix:\n");
    for(i=0;i<3;i++)
    {
        for(j=0;j<i;j++)
        {
            printf("^\t");
        }
        for(j=i;j<3;j++)
        {
            printf("%d\t",a[i][j]);
        }
        
        printf("\n");
    }
    for(i=0;i<3;i++)
    {
        for(j=i;j<3;j++)
        {
            sum=sum+a[i][j];
        }
        
        printf("\n");
    }
    printf("sum of upper triangular matrix :%d\n",sum);
}









//sum of lower triangular matrix
#include<stdio.h>
void main()
{
    int a[3][3],i,j,k,sum=0;
    printf("enter elements of an array:\n");
    for(i=0;i<3;i++)
    {
        for(j=0;j<3;j++)
        {
            scanf("%d",&a[i][j]);
        }
    }
    printf("entered matrix:\n");
    for(i=0;i<3;i++)
    {
        for(j=0;j<3;j++)
        {
            printf("%d\t",a[i][j]);
        }
        printf("\n");
    }
    printf("answer matrix:\n");
    for(i=0;i<3;i++)
    {
        for(j=0;j<=i;j++)
        {
            printf("%d\t",a[i][j]);
        }
        for(j=2;j>i;j--)
        {
            printf("^\t");
        }
        printf("\n");
    }
    for(i=0;i<3;i++)
    {
        for(j=0;j<=i;j++)
        {
            sum=sum+a[i][j];
        }
    }
    
    printf("sum of lower triangular matrix :%d\n",sum);
}









//sum of lower triangular matrix
#include<stdio.h>
void main()
{
    int a[3][3],i,j,k,sum=0;
    printf("enter elements of an array:\n");
    for(i=0;i<3;i++)
    {
        for(j=0;j<3;j++)
        {
            scanf("%d",&a[i][j]);
        }
    }
    printf("entered matrix:\n");
    for(i=0;i<3;i++)
    {
        for(j=0;j<3;j++)
        {
            printf("%d\t",a[i][j]);
        }
        printf("\n");
    }
    printf("transpose of a matrix:\n");
    for(i=0;i<3;i++)
    {
        for(j=0;j<3;j++)
        {
            printf("%d\t",a[j][i]);
        }
        printf("\n");
    }
}









//determinant of a matrix
#include<stdio.h>
void main()
{
    int a[3][3],i,j,det,k,l,m,n,o,p,q,r,s;
    printf("enter elements of an array:\n");
    for(i=0;i<3;i++)
    {
        for(j=0;j<3;j++)
        {
            scanf("%d",&a[i][j]);
        }
    }
    printf("entered matrix:\n");
    for(i=0;i<3;i++)
    {
        for(j=0;j<3;j++)
        {
            printf("%d\t",a[i][j]);
        }
        printf("\n");
    }
    k=a[0][0];
    l=a[0][1];
    m=a[0][2];
    n=a[1][0];
    o=a[1][1];
    p=a[1][2];
    q=a[2][0];
    r=a[2][1];
    s=a[2][2];
    det=(k*(o*s-r*p))-(l*(n*s-p*q))+(m*(n*r-o*q));
    printf("determinant of a entered matrix is:%d\n",det);
}















//identity matrix
#include<stdio.h>
void main()
{
    int a[3][3],i,j,d,k,sum=0,sum1=0;
    printf("enter elements of an array:\n");
    for(i=0;i<3;i++)
    {
        for(j=0;j<3;j++)
        {
            scanf("%d",&a[i][j]);
        }
    }
    printf("entered matrix:\n");
    for(i=0;i<3;i++)
    {
        for(j=0;j<3;j++)
        {
            printf("%d\t",a[i][j]);
        }
        printf("\n");
    }
    for(i=0;i<3;i++)
    {
        for(j=0;j<3;j++)
        {
            if(i==j)
            {
                sum=sum+a[i][j];
            }
        }
        for(j=0;j<3;j++)
        {
            sum1=sum1+a[i][j];
        }
    }
    printf("sum=%d\n",sum);
    printf("sum1=%d\n",sum1);
    if(sum==sum1&&sum==3&&sum1==3)
    {
        printf("entered matrix is identiey matrix");
    }
    else
    {
        printf("it is not an identity matrix");
    }
}












//sparse matrix
#include<stdio.h>
void main()
{
    int a[3][3],i,j,k,count=0;
    printf("enter elements of an array:\n");
    for(i=0;i<3;i++)
    {
        for(j=0;j<3;j++)
        {
            scanf("%d",&a[i][j]);
        }
    }
    printf("entered matrix:\n");
    for(i=0;i<3;i++)
    {
        for(j=0;j<3;j++)
        {
            printf("%d\t",a[i][j]);
        }
        printf("\n");
    }
    for(i=0;i<3;i++)
    {
        for(j=0;j<3;j++)
        {
            if(a[i][j]==0)
            {
                count++;
            }
        }
    }
    printf("number of zero elements present in matrix=%d\n",count);
    if(count>=5)
    {
        printf("entered matrix is sparse matrix\n");
    }
    else
    {
        printf("it is not a sparse matrix\n");
    }
}















//symmetric matrix
#include<stdio.h>
void main()
{
    int a[3][3],b[3][3],i,j,k,count=0;
    printf("enter elements of first matrix:\n");
    for(i=0;i<3;i++)
    {
        for(j=0;j<3;j++)
        {
            scanf("%d",&a[i][j]);
        }
    }
    printf("first matrix:\n");
    for(i=0;i<3;i++)
    {
        for(j=0;j<3;j++)
        {
            printf("%d\t",a[i][j]);
        }
        printf("\n");
    }
    printf("transpose of entered matrix is:\n");
    for(i=0;i<3;i++)
    {
        for(j=0;j<3;j++)
        {
            b[i][j]=a[j][i];
            printf("%d\t",b[i][j]);
        }
        printf("\n");
    }
    for(i=0;i<3;i++)
    {
        for(j=0;j<3;j++)
        {
            if(a[i][j]==b[i][j])
            {
                count++;
            }
        }
    }
    printf("count:%d\n",count);
    if(count==9)
    {
        printf("entered matrix is symmetric matrix");
    }
    else
    {
        printf("it's not a symmetric matrix");
    }
    
}














//total number of negative elements in an array
#include<stdio.h>
void main()
{
    int a[10],b[2],i,j=10,k,count=0;
    printf("enter elements of an array:\n");
    for(i=0;i<10;i++)
    {
        scanf("%d",&a[i]);
    }
    printf("entered array:\n");
    for(i=0;i<10;i++)
    {
        printf("%d\t",a[i]);
    }
    for(i=0;i<10;i++)
    {
        if(a[i]<0)
        {
            count++;
        }
    }
    printf("count=%d\n",count);
    
    printf("total number of negative elements in array:%d\n ",count);
}










//copy elements from one array to another array
#include<stdio.h>
void main()
{
    int a[5]={1,2,3,4,5},i,j,k,d;
    d=sizeof(a);
    printf("size of given array is %d bytes or %d\n elements\n",d,d/4);
    int b[d/4];
    for(i=0;i<5;i++)
    {
        b[i]=a[i];
    }
    printf("copied elements are\n");
    for(i=0;i<5;i++)
    {
        printf("%d\t",b[i]);
    }
}











//insert an element in to an array
#include<stdio.h>
void main()
{
    int a[108],i,j,k;
    for(i=0;i<10;i++)
    {
        if(i<=4)
        {
            a[i]=2;
        }
        else
        {
            a[i]=3;
        }
    }
    for(i=0;i<10;i++)
    {
        printf("%d\t",a[i]);
    }
    printf("\n");
    for(i=9;i>=4;i--)
    {
        a[i+1]=a[i];
    }
    a[4]=3;
    for(i=0;i<10;i++)
    {
        printf("%d\t",a[i]);
    }
}
        











//insert an element and delet an element in to an array
#include<stdio.h>
void main()
{
    int a[108],i,j,k;
   for(i=0;i<=9;i++)
   {
       if(i<=4)
       {
           a[i]=5;
       }
       
       else
       {
           a[i]=6;
       }
   }
   for(i=0;i<=9;i++)
   {
       printf("%d\t",a[i]);
   }
   printf("\n");
   for(i=9;i>=2;i--)
   {
       a[i+1]=a[i];
   }
   a[2]=9;
   for(i=0;i<=10;i++)
   {
       printf("%d\t",a[i]);
   }
   for(i=2;i<=10;i++)
   {
       a[i]=a[i+1];
   }
   printf("\n");
   for(i=0;i<=10;i++)
   {
       printf("%d\t",a[i]);
   }
   
   
}








//Fibonacci Series up to n terms
#include<stdio.h>
void main()
{
    int first_term=0,second_term=1,next_term=0,i=1,j,k,num;
    printf("enter n value:\n");
    scanf("%d",&num);
    printf("Fibonacci Series up to %d terms:\n",num);
    printf("%d\t%d\t",first_term,second_term);
    
    while(i<=num)
    {
        next_term=first_term+second_term;
        printf("%d\t",next_term);
        first_term=second_term;
        second_term=next_term;
        i++;
    }
    
}














//Fibonacci Series up to n terms
#include<stdio.h>
void main()
{
    int first_term,second_term,next_term=0,i=1,j,k,num;
    printf("enter n value:\n");
    scanf("%d",&num);
    printf("enter first and seond terms:\n");
    scanf("%d%d",&first_term,&second_term);
    printf("Fibonacci Series up to %d terms:\n",num);
    printf("%d\t%d\t",first_term,second_term);
    
    while(i<=num)
    {
        next_term=first_term+second_term;
        printf("%d\t",next_term);
        first_term=second_term;
        second_term=next_term;
        i++;
    }
    
}










//unique elements in the array.
#include<stdio.h>
void main()
{
    int a[36]={1,1,1,7,1,3,3,3,4,5,6,6},b[36],i,j,k,count=0;
    for(i=0;i<=11;i++)
    {
        b[i]=a[i];
    }
    for(i=0;i<=11;i++)
    {
        printf("%d\t",b[i]);
    }
    printf("\n");
    for(i=0;i<=11;i++)
    {
        count=0;
        for(j=0;j<=11;j++)
        {
            if(a[i]==b[j])
            {
                count++;
            }
        }
        if(count==1)
        printf("%d\n",a[i]);
    }
}










//dupliate elements of an array
#include<stdio.h>
void main()
{
    int a[]={5 ,4, 5, 2, 3 },i,j,k,num=0;
    num=sizeof(a)/sizeof(a[0]);
    printf(" length of an array:%d\n",num);
    for(i=0;i<num;i++)
    {
        for(j=i+1;j<num;j++)
        {
            if(a[i]==a[j])
            {
                printf("%d\n",a[j]);
            }
        }
    }
}







//merge two arrays to third array
#include<stdio.h>
void main()
{
    int a[5],b[5],c[12],i,j=0,k,num;
    printf("enter first array elements:\n");
    for(i=0;i<5;i++)
    {
    scanf("%d",&a[i]);
    }
    printf("enter array 2 elements:\n");
    for(i=0;i<5;i++)
    {
        scanf("%d",&b[i]);
    }
    printf("entered arrays are:\n");
    for(i=0;i<5;i++)
    {
        printf("%d\t",a[i]);
    }
    printf("\n\n");
    for(i=0;i<5;i++)
    {
        printf("%d\t",b[i]);
    }
    
    printf("\n\n");
    for(i=0;i<5;i++)
    {
        printf("%d\t",c[i]);
    }
    printf("\n");
    for(i=0;i<5;i++)
    {
        c[i]=a[i];
    }
    for(i=5;i<12;i++)
    {
        c[i]=b[j];
        j++;
    }
    printf("array  after storing elements:\n");
    for(i=0;i<12;i++)
    {
        printf("%d\t",c[i]);
    }
}







//reverse an array
#include<stdio.h>
void main()
{
    int a[5],b[5],c[5],i,j=4,k,num;
    printf("enter array values:\n");
    for(i=0;i<5;i++)
    {
        scanf("%d",&a[i]);
    }
    printf("\n");
    printf("entered array is:\n");
    for(i=0;i<5;i++)
    {
        printf("%d\t",a[i]);
    }
    for(i=0;i<5;i++)
    {
        b[i]=a[i];
    }
    for(i=0;i<5;i++)
    {
        a[i]=b[j];
        j--;
        
    }
    printf("\n");
    printf("reverse of array is:\n");
    for(i=0;i<5;i++)
    {
        printf("%d\t",a[i]);
    }
}









//put even and odd elements in to separate array
#include<stdio.h>
void main()
{
    int a[10],b[5],c[5],i,j=0,k=0,num;
    printf("enter first array elements:\n");
    for(i=0;i<10;i++)
    {
        scanf("%d",&a[i]);
    }
    printf("\n");
    for(i=0;i<10;i++)
    {
        printf("%d\t",a[i]);
    }
    printf("\n");
    for(i=0;i<10;i++)
    {
        if(a[i]%2==0)
        {
            b[j]=a[i];
            j++;
        }
        else
        {
            c[k]=a[i];
            k++;
        }
    }
    printf("sorted arrays are:\n");
    printf("even array:\n");
    for(i=0;i<5;i++)
    {
        printf("%d\t",b[i]);
    }
    printf("\n");
    printf("odd array:\n");
    for(i=0;i<5;i++)
    {
        printf("%d\t",c[i]);
    }
}









//search an element in an array 
#include<stdio.h>
void main()
{
    int a[10],i,j,k,num;
    printf("enter the elements of an array:\n");
    for(i=0;i<10;i++)
    {
        scanf("%d",&a[i]);
    }
    printf("enter the element to find:\n");
    scanf("%d",&num);
    printf("entered array is:\n");
    for(i=0;i<10;i++)
    {
        printf("%d\t",a[i]);
    }
    printf("\n");
    for(i=0;i<10;i++)
    {
        if(a[i]==num)
        {
            printf("element found at %d position",i);
        }
    }
}











//sort array elements in assending order
#include<stdio.h>
void main()
{
    int a[5],i,j,k,num;
    printf("enter the elements of an array:\n");
    for(i=0;i<5;i++)
    {
        scanf("%d",&a[i]);
    }
    printf("entered array is:\n");
    for(i=0;i<5;i++)
    {
        printf("%d\t",a[i]);
    }
    printf("\n");
    for(i=0;i<5;i++)
    {
        for(j=i+1;j<5;j++)
        {
            if(a[i]>a[j])
            {
                k=a[j];
                a[j]=a[i];
                a[i]=k;
            }
        }
    }
    printf("sorted array in asending order is:\n");
    for(i=0;i<5;i++)
    {
        printf("%d\t",a[i]);
    }
    printf("\n");
}









//sort array elements in desending order
#include<stdio.h>
void main()
{
    int a[5],i,j,k,num;
    printf("enter the elements of an array:\n");
    for(i=0;i<5;i++)
    {
        scanf("%d",&a[i]);
    }
    printf("entered array is:\n");
    for(i=0;i<5;i++)
    {
        printf("%d\t",a[i]);
    }
    printf("\n");
    for(i=0;i<5;i++)
    {
        for(j=i+1;j<5;j++)
        {
            if(a[i]<a[j])
            {
                k=a[j];
                a[j]=a[i];
                a[i]=k;
            }
        }
    }
    printf("sorted array in desending order is:\n");
    for(i=0;i<5;i++)
    {
        printf("%d\t",a[i]);
    }
    printf("\n");
}






//left rotate of an array
#include<stdio.h>
void main()
{
    int a[18],b[16],num,d,i,j=0,k=0;
    printf("number of elements present in an array:\n");
    scanf("%d",&d);
    printf("enter the elements of an array:\n");
    for(i=0;i<d;i++)
    {
        scanf("%d",&a[i]);
    }
    printf("enter how many positions i have to shift:\n");
    scanf("%d",&num);
    for(i=0;i<num;i++)
    {
        b[i]=a[i];
    }
    for(i=num;i<d;i++)
    {
        a[j]=a[i];
        j++;
    }
    for(i=d-num;i<d;i++)
    {
        a[i]=b[k];
        k++;
    }
    printf("array after shifting %d positions left:\n",num);
    for(i=0;i<d;i++)
    {
        printf("%d\t",a[i]);
    }
}










//right rotate of an array
#include<stdio.h>
void main()
{
    int a[18],b[16],num,d,i,j,k=0,l=0;
    printf("number of elements present in an array:\n");
    scanf("%d",&d);
    printf("enter the elements of an array:\n");
    j=d-1;
    for(i=0;i<d;i++)
    {
        scanf("%d",&a[i]);
    }
    printf("enter how many positions i have to shift:\n");
    scanf("%d",&num);
    for(i=d-num;i<d;i++)
    {
        b[l]=a[i];
        l++;
    }
    for(i=d-num-1;i>=0;i--)
    {
        a[j]=a[i];
        j--;
    }
    for(i=0;i<num;i++)
    {
        a[i]=b[i];
        
    }
    printf("array after shifting %d positions right:\n",num);
    for(i=0;i<d;i++)
    {
        printf("%d\t",a[i]);
    }
}









//maximum and minimum elements of an array
#include<stdio.h>
void main()
{
    int a[18],i,j,k,d;
    printf("number of elements present in an array:\n");
    scanf("%d",&d);
    printf("enter the elements of an array:\n");
    for(i=0;i<d;i++)
    {
        scanf("%d",&a[i]);
    }
    printf("entered array is:\n");
    for(i=0;i<d;i++)
    {
        printf("%d\t",a[i]);
    }
    printf("\n");
    for(i=0;i<d;i++)
    {
        for(j=i+1;j<d;j++)
        {
            if(a[i]<a[j])
            {
                k=a[i];
                a[i]=a[j];
                a[j]=k;
            }
        }
    }
    printf("maximum element in an array is:%d\n minimum element of an array is:%d\n",a[0],a[d-1]);
    
}










//second largest  element in an array
#include<stdio.h>
void main()
{
    int a[18],i,j,k,d;
    printf("number of elements present in an array:\n");
    scanf("%d",&d);
    printf("enter the elements of an array:\n");
    for(i=0;i<d;i++)
    {
        scanf("%d",&a[i]);
    }
    printf("entered array is:\n");
    for(i=0;i<d;i++)
    {
        printf("%d\t",a[i]);
    }
    printf("\n");
    for(i=0;i<d;i++)
    {
        for(j=i+1;j<d;j++)
        {
            if(a[i]<a[j])
            {
                k=a[i];
                a[i]=a[j];
                a[j]=k;
            }
        }
    }
    printf("second largest element in an array is:%d\n",a[1]);
    
}











//print all negative elements in an array 
#include<stdio.h>
void main()
{
    int a[18],b[16],i,j=0,k=0,d;
    printf("number of elements present in an array:\n");
    scanf("%d",&d);
    printf("enter the elements of an array:\n");
    for(i=0;i<d;i++)
    {
        scanf("%d",&a[i]);
    }
    printf("entered array is:\n");
    for(i=0;i<d;i++)
    {
        printf("%d\t",a[i]);
    }
    printf("\n");
    for(i=0;i<d;i++)
    {
        if(a[i]<0)
        {
            b[j]=a[i];
            j++;
            k++;
        }
    }
    if(k>=1)
    {
    printf("negative elements in entered array is:\n");
    for(i=0;i<k;i++)
    {
        printf("%d\t",b[i]);
    }
    }
    else
    {
        printf("there is/are no negative number/s in an array\n");
    }
}










//sort even and odd elements in the array 
#include<stdio.h>
void main()
{
    int a[18],b[16],i,j=0,k=0,d,even_count=0,odd_count=0;
    printf("number of elements present in an array:\n");
    scanf("%d",&d);
    printf("enter the elements of an array:\n");
    for(i=0;i<d;i++)
    {
        scanf("%d",&a[i]);
    }
    printf("entered array is:\n");
    for(i=0;i<d;i++)
    {
        printf("%d\t",a[i]);
    }
    printf("\n");
    for(i=0;i<d;i++)
    {
        if(a[i]%2==0)
        {
            continue;
        }
        for(j=i+1;j<d;j++)
        {
            if(a[j]%2==0)
            {
                k=a[i];
                a[i]=a[j];
                a[j]=k;
            }
        }
    }
    printf("sorted array:\n");
    for(i=0;i<d;i++)
    {
        printf("%d\t",a[i]);
    }
}










//pattern star letters
#include<stdio.h>
void main()
{
    int i,j,k;
    for(i=0;i<8;i++)
    {
        for(j=0;j<8;j++)
        {
            if(i==0||i==1||i==3||i==4||i==6||i==7||i==2&&j==0||i==2&&j==1||i==5&&j==7||i==5&&j==6)
            {
                printf("*");
            }
            else
            {
                printf(" ");
            }
        }
        for(j=0;j<4;j++)
        {
            printf(" ");
        }
        for(j=0;j<8;j++)
        {
            if(i==0||i==1||j==3||j==4)
            {
                printf("*");
            }
            else
            {
                printf(" ");
            }
        }
        for(j=0;j<4;j++)
        {
            printf(" ");
        }
        for(j=0;j<8;j++)
        {
            if(i==0&&j==3||i==0&&j==4||i==1&&j==2||i==1&&j==3||i==1&&j==4||i==1&&j==5||i==2&&j==1||i==2&&j==2||i==2&&j==4||i==2&&j==5||i==3||i==4||i==5&&j==0||i==5&&j==1||i==5&&j==6||i==5&&j==7||i==6&&j==0||i==6&&j==1||i==6&&j==6||i==6&&j==7||i==7&&j==0||i==7&&j==1||i==7&&j==6||i==7&&j==7)
            {
                printf("*");
            }
            else
            {
                printf(" ");
            }
        }
        for(j=0;j<4;j++)
        {
            printf(" ");
        }
        for(j=0;j<8;j++)
        {
            if(i==0||i==3||i==4||i==1&&j==0||i==1&&j==1||i==1&&j==6||i==1&&j==7||i==2&&j==0||i==2&&j==1||i==2&&j==6||i==2&&j==7||i==5&&j==0||i==5&&j==1||i==5&&j==6||i==5&&j==7||i==6&&j==0||i==6&&j==1||i==6&&j==6||i==6&&j==7||i==7&&j==0||i==7&&j==1||i==7&&j==6||i==7&&j==7)
            {
                printf("*");
            }
            else
            {
                printf(" ");
            }
        }
        
        printf("\n");
    }
}







//sum of two numbers using funtions
#include<stdio.h>
int addition(int a,int b);
void main()
{
    int a,b,sum;
    printf("enter any two numbers:\n");
    scanf("%d%d",&a,&b);
    sum=addition(a,b);
    printf("sum of two numbers is:%d\n",sum);
}
int addition(int a,int b)
{
    int sum;
    sum=a+b;
    return sum;
}







//cube of a given number 
#include<stdio.h>
void main()
{
    int a,sum;
    printf("enter any number:\n");
    scanf("%d",&a);
    sum=cube(a);
    printf("cube of a given number is:%d\n",sum);
    
}
int cube(int a)
{
    int sum;
    sum=a*a*a;
    return sum;
}









//diameter,circumferene and area of cirle.
#include<stdio.h>
#define pi 3.14
float circle(int r);
float circle1(int r);
void main()
{
    int r;
    float area,circum;
    printf("enter radious of cirle:\n");
    scanf("%d",&r);
    area=circle(r);
    circum=circle1(r);
    printf("area of circle:%f\n",area);
    printf("circumference of circle:%f\n",circum);
}
float circle(int r)
{
    float area,circum;
    area= pi*r*r;
    circum=2*pi*r;
    return area;
    return circum;
}
float circle1(int r)
{
    float area,circum;
    area= pi*r*r;
    circum=2*pi*r;
    return circum;
}










//maximum and minimum between two numbers
#include<stdio.h>
int maxmin(int a,int b);
int minmax(int a,int b);
void main()
{
    int a,b,max,min;
    printf("enter any two numbers:");
    scanf("%d%d",&a,&b);
    max=maxmin(a,b);
    min=minmax(a,b);
    printf("maximum number is %d\n",max);
    printf("minimum number is:%d\n",min);
}
int maxmin(int a,int b)
{
    int max;
    max=(a>b)?a:b;
    return max;
}
int minmax(int a,int b)
{
    int max;
    max=(a<b)?a:b;
    return max;
}









//number is even or odd using funtions
#include<stdio.h>
int evenodd(int num);
void main()
{
    int num,result;
    printf("enter any number:\n");
    scanf("%d",&num);
    result=evenodd(num);
    if(result==0)
    {
        printf("entered number is even\n");
    }
    else
    {
        printf("an odd number\n");
    }
}
int evenodd(int num)
{
    int ans;
    if(num%2==0)
    {
        return 0;
    }
    else
    {
        return 1;
    }
}















//insert an element in an array
#include<stdio.h>
void main()
{
    int i,j,k,num,a[10],d,element;
    printf("enter number of elements present in an array:\n");
    scanf("%d",&num);
    printf("enter elements of an array:\n");
    for(i=0;i<num;i++)
    {
        scanf("%d",&a[i]);
    }
    printf("entered array is:\n");
    for(i=0;i<num;i++)
    {
        printf("%d\t",a[i]);
    }
    printf("\n");
    printf("enter position at which you have to insert an element:\n");
    scanf("%d",&d);
    d--;
    printf("enter the element to be inserted:\n");
    scanf("%d",&element);
    for(i=num;i>=d;i--)
    {
        a[i]=a[i-1];
    }
    a[d]=element;
    printf("sorted array is:\n");
    for(i=0;i<=num;i++)
    {
        printf("%d\t",a[i]);
    }
}







//prime or not
#include<stdio.h>
void main()
{
    int num,i,j,k,flag=0;
    printf("enter the number to chek for prime:\n");
    scanf("%d",&num);
    for(i=2;i<num;i++)
    {
        if(num%i==0)
        {
            flag++;
        }
    }
    if(flag==0)
    {
        printf("%d is a prime number\n",num);
    }
    else
    {
        printf("%d is not a prime number\n",num);
    }
    
}









//prime numbers up to n
#include<stdio.h>
void main()
{
    int num,i,j,k,flag=0;
    printf("enter up to what number you want prime numbers \n");
    scanf("%d",&num);
    printf("2\t");
    for(j=3;j<num;j++)
    {
    for(i=2;i<j;i++)
    {
        if(j%i==0)
        {
            flag++;
        }
    }
    if(flag==0)
    {
        printf("%d\t",j);
    }
    flag=0;
    }
}









//prime numbers between two numbers
#include<stdio.h>
void main()
{
    int num,i,j,k,flag=0,l,m;
    printf("enter between what numbers you want primes:\n");
    scanf("%d%d",&l,&m);
    for(j=l;j<m;j++)
    {
    for(i=2;i<j;i++)
    {
        if(j%i==0)
        {
            flag++;
        }
    }
    if(flag==0)
    {
        printf("%d\t",j);
    }
    flag=0;
    }
}







//n prime numbers
#include<stdio.h>
void main()
{
    int i,j,k=1,num,flag=0;
    printf("enter how many primes you want:\n");
    scanf("%d",&num);
    printf("2\t");
    for(i=3;1;i++)
    {
        for(j=2;j<i;j++)
        {
            if(i%j==0)
            {
                flag++;
            }
        }
        if(flag==0)
        {
            printf("%d\t",i);
            k++;
        }
        flag=0;
        if(k==num)
        {
            break;
        }
    }
}






//passing array as an arguement to the funtion
#include<stdio.h>
void fun(int a[],int size);
void main()
{
    int a[10],size,i=0;
    printf("enter size of an array:\n");
    scanf("%d",&size);
    printf("enter the elements of an array:\n");
    for(i=0;i<size;i++)
    {
        scanf("%d",&a[i]);
    }
    fun(a,size);
   /* printf("entered array is :\n");
    for(i=0;i<size;i++)
    {
        printf("%d\t",a[i]);
    }
    printf("\n");
    */
}
void fun(int a[],int size)
{
    int i;
    printf("entered array is:\n");
    for(i=0;i<size;i++)
    {
        printf("%d\t",a[i]);
    }
}












//two dimentional matrix 
#include<stdio.h>
void fun(int a[][10],int row,int col);
void main()
{
    int a[10][10],row,col,i,j,k;
    printf("enter the row and column sizes of matrix:\n");
    scanf("%d%d",&row,&col);
    printf("enter the elements of matrix:\n");
    for(i=0;i<row;i++)
    {
        for(j=0;j<col;j++)
        {
            scanf("%d",&a[i][j]);
        }
    }
    fun(a,row,col);
    
}
void fun(int a[10][10],int row,int col)
{
    int i,j,k;
    printf("entered matrix is:\n");
    for(i=0;i<row;i++)
    {
        for(j=0;j<col;j++)
        {
        printf("%d\t",a[i][j]);
        }
        printf("\n");
    }
}







//two dimentional matrix addition
#include<stdio.h>
void fun(int a[][10],int b[][10],int row,int col);
void main()
{
    int a[10][10],b[10][10],row,col,i,j,k;
    printf("enter the row and column sizes of matrix:\n");
    scanf("%d%d",&row,&col);
    printf("enter the elements of first matrix:\n");
    for(i=0;i<row;i++)
    {
        for(j=0;j<col;j++)
        {
            scanf("%d",&a[i][j]);
        }
    }
    printf("enter the elements of second matrix:\n");
    for(i=0;i<row;i++)
    {
        for(j=0;j<col;j++)
        {
            scanf("%d",&b[i][j]);
        }
    }
    fun(a,b,row,col);
    
}
void fun(int a[][10],int b[][10],int row,int col)
{
    int i,j,k,c[10][10];
    printf("entered first matrix is:\n");
    for(i=0;i<row;i++)
    {
        for(j=0;j<col;j++)
        {
        printf("%d\t",a[i][j]);
        }
        printf("\n");
    }
    printf("entered second matrix is:\n");
    for(i=0;i<row;i++)
    {
        for(j=0;j<col;j++)
        {
        printf("%d\t",b[i][j]);
        }
        printf("\n");
    }
    for(i=0;i<row;i++)
    {
        for(j=0;j<col;j++)
        {
            c[i][j]=a[i][j]+b[i][j];
        }
    }
    printf("sum of entered two matrices are :\n");
    for(i=0;i<row;i++)
    {
        for(j=0;j<col;j++)
        {
        printf("%d\t",c[i][j]);
        }
        printf("\n");
    }
}










//passing variable number of arguements
#include<stdio.h>
#include<stdarg.h>
void fun(int,...);
void main()
{
    int i=0,j=1,k=2,l=8,num=4;
    fun(num,i,j,k,l);
}
void fun(int num,...)
{
    int i;
    va_list valist;
    va_start(valist,num);
    for(i=0;i<num;i++)
    {
     printf("%d\t",va_arg(valist,int));
    }
    va_end(valist);
    
}










//gcd of given numbers using recurssion
#include<stdio.h>
int fun(int n1,int n2);
void main()
{
    int n1,n2,gcd;
    printf("enter any two positive numbers:\n");
    scanf("%d%d",&n1,&n2);
    gcd=fun(n1,n2);
    printf("gcd=%d\n",gcd);
    
}
int fun(int n1,int n2)
{
    if(n1!=n2)
    {
    if(n1>n2)
    {
        n1=n1-n2;
    }
    else
    {
        n2=n2-n1;
    }
    fun(n1,n2);
    }
    else
    {
        return n1;
    }
}











//armstrong number
#include<stdio.h>
#include<math.h>
void main()
{
    int num,result=0,reminder,l=0;
    printf("enter any number:\n");
    scanf("%d",&num);
    l=log10(num);
    printf("length=%d\n",l+1);
    l=l+1;
    while(num!=0)
    {
        reminder=num%10;
        result=result+pow(reminder,l);
        num=num/10;
    }
    printf("%d\n",result);
}
